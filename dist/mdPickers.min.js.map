{"version":3,"file":"mdPickers.min.js","sources":["mdPickers.min.js"],"sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n    \"ngMaterial\",\n    \"ngAnimate\",\n    \"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $mdIconProvider.icon(icon.id, icon.url);\n    });\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $templateCache.put(icon.url, icon.svg);\n    });\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\n/**\n * Created by Robin Thoni on 6/21/17.\n */\n\nmodule.factory('$mdpLocale', [function () {\n    var $mdpLocale = {\n        time: {\n            minTime: null,\n            maxTime: null,\n            okLabel: \"OK\",\n            cancelLabel: \"Cancel\",\n            timeFormat: \"HH:mm\",\n            noFloat: false,\n            openOnClick: false,\n            autoSwitch: false,\n            ampm: true,\n            clearOnCancel: false\n        },\n        date: {\n            minDate: null,\n            maxDate: null,\n            okLabel: \"OK\",\n            cancelLabel: \"Cancel\",\n            dateFilter: null,\n            dateFormat: \"YYYY-MM-DD\",\n            displayFormat: \"ddd, MMM DD\",\n            noFloat: false,\n            openOnClick: false,\n            clearOnCancel: false\n        }\n    };\n\n    return $mdpLocale;\n}]);\n\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n\n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n\n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n\n            return {};\n        }\n    }\n\n}]);\n/* global moment, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    this.date = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n\n    // validate min and max date\n    if (this.minDate && this.maxDate) {\n        if (this.maxDate.isBefore(this.minDate)) {\n            this.maxDate = moment(this.minDate).add(1, 'days');\n        }\n    }\n\n    if (this.date) {\n        // check min date\n        if (this.minDate && this.date.isBefore(this.minDate)) {\n            this.date = moment(this.minDate);\n        }\n\n        // check max date\n        if (this.maxDate && this.date.isAfter(this.maxDate)) {\n            this.date = moment(this.maxDate);\n        }\n    }\n\n    this.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n            if(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n\n            return this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n    this.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n\n    this.showYear = function() {\n\n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n\n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        var date = this.date;\n\n        if (this.minDate && this.date.isBefore(this.minDate)) {\n            date = moment(this.minDate);\n        }\n\n        if (this.maxDate && this.date.isAfter(this.maxDate)) {\n            date = moment(this.maxDate);\n        }\n\n        $mdDialog.hide(date.toDate());\n    };\n\n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })\n\n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\",\n        PARENT_GETTER = function() { return undefined };\n\n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;\n\n    };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.setDialogParentGetter = function(fn) {\n        PARENT_GETTER = fn;\n    };\n\n    this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\n        var datePicker = function(currentDate, options) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            options.displayFormat = options.displayFormat || $mdpLocale.date.displayFormat || DISPLAY_FORMAT;\n\n            var labelOk = options.okLabel || $mdpLocale.date.okLabel || LABEL_OK;\n            var labelCancel = options.cancelLabel || $mdpLocale.date.cancelLabel || LABEL_CANCEL;\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                                    '</md-toolbar>' +\n\n                                '</div>' +\n\n                                '<div>' +\n\n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                        '<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                },\n                multiple: true,\n                parent: PARENT_GETTER()\n            });\n        };\n\n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n    var self = this;\n\n    this.$onInit = function () {\n        self.daysInMonth = [];\n        self.dow = moment.localeData().firstDayOfWeek();\n        self.weekDays = [].concat(\n            moment.weekdaysMin().slice(self.dow),\n            moment.weekdaysMin().slice(0, self.dow)\n        );\n        $scope.$watch(function () {\n            return self.date.unix()\n        }, function (newValue, oldValue) {\n            if (newValue && newValue !== oldValue)\n                self.updateDaysInMonth();\n        });\n        self.updateDaysInMonth();\n    };\n\n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day() - this.dow;\n\n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n\n        return arr;\n    };\n\n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) &&\n\n            (!this.maxDate || this.maxDate >= day) &&\n\n            (!self.dateFilter || !self.dateFilter(day));\n    };\n\n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n\n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n\n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    });\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button\" aria-label=\"Select day\" ng-mouseenter=\"raised = true\" ng-mouseleave=\"raised = false\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value, \\'md-raised\\': raised || calendar.date.date() == day.value }\" ng-dblclick=\"datepicker.confirm()\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a);\n\n            });\n\n            scope.raised = false;\n\n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n\n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n\n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(value, format) {\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\nfunction compareDateValidator(value, format, otherDate, comparator) {\n    // take only the date part, not the time part\n    if (angular.isDate(otherDate)) {\n        otherDate = moment(otherDate).format(format);\n    }\n    otherDate = moment(otherDate, format, true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !otherDate.isValid() ||\n            comparator(date, otherDate);\n}\n\nfunction minDateValidator(value, format, minDate) {\n    return compareDateValidator(value, format, minDate, function(d, md) { return d.isSameOrAfter(md); });\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n    return compareDateValidator(value, format, maxDate, function(d, md) { return d.isSameOrBefore(md); });\n}\n\nfunction filterValidator(value, format, filter) {\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !angular.isFunction(filter) ||\n            !filter(date.toDate());\n}\n\nfunction requiredValidator(value, ngModel) {\n    return value\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", \"$mdpLocale\", function($mdpDatePicker, $timeout, $mdpLocale) {\n    return  {\n        restrict: 'E',\n        require: ['ngModel', \"^^?form\"],\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat) || $mdpLocale.date.noFloat,\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) || $mdpLocale.date.openOnClick;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input name=\"{{ inputName }}\" ng-model=\"model.$viewValue\" ng-required=\"required()\" type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"{{placeholder}}\" placeholder=\"{{placeholder}}\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"inputName\": \"@?mdpInputName\",\n            \"clearOnCancel\": \"=?mdpClearOnCancel\"\n        },\n        link: {\n            pre: function(scope, element, attrs, constollers, $transclude) {\n\n            },\n            post: function(scope, element, attrs, controllers, $transclude) {\n                var ngModel = controllers[0];\n                var form = controllers[1];\n\n                var opts = {\n                    get minDate() {\n                        return scope.minDate || $mdpLocale.date.minDate;\n                    },\n                    get maxDate() {\n                        return scope.maxDate || $mdpLocale.date.maxDate;\n                    },\n                    get dateFilter() {\n                        return scope.dateFilter || $mdpLocale.date.dateFilter;\n                    },\n                    get clearOnCancel() {\n                        return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.date.clearOnCancel;\n                    }\n                };\n\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n                $transclude(function(clone) {\n                    inputContainer.append(clone);\n                });\n\n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n                scope.type = scope.dateFormat || $mdpLocale.date.dateFormat ? \"text\" : \"date\";\n                scope.dateFormat = scope.dateFormat || $mdpLocale.date.dateFormat || \"YYYY-MM-DD\";\n                scope.model = ngModel;\n\n                scope.isError = function() {\n                    return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\n                };\n\n                scope.required = function() {\n                    return !!attrs.required;\n                };\n\n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && moment(value);\n                    if(date && date.isValid()) {\n                        var strVal = date.format(scope.dateFormat);\n                        updateInputElement(strVal);\n                        return strVal;\n                    } else {\n                        updateInputElement(null);\n                        return null;\n                    }\n                });\n\n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(viewValue, scope.dateFormat);\n                };\n\n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(viewValue, scope.dateFormat, opts.minDate);\n                };\n\n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(viewValue, scope.dateFormat, opts.maxDate);\n                };\n\n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(viewValue, scope.dateFormat, opts.dateFilter);\n                };\n\n                ngModel.$validators.required = function(modelValue, viewValue) {\n                    return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n                };\n\n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = moment(value, scope.dateFormat, true);\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = moment(ngModel.$modelValue);\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n\n                            parsed = originalModel;\n                        }\n                        return parsed.toDate();\n\n                    } else\n                        return null;\n                });\n\n                // update input element value\n                function updateInputElement(value) {\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n\n                function updateDate(date) {\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n                        strValue = value.format(scope.dateFormat);\n\n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(strValue);\n                    } else {\n                        updateInputElement(date);\n                        ngModel.$setViewValue(date);\n                    }\n\n                    if(!ngModel.$pristine &&\n\n                        messages.hasClass(\"md-auto-hide\") &&\n\n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                    ngModel.$render();\n                }\n\n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                        minDate: opts.minDate,\n                        maxDate: opts.maxDate,\n                        dateFilter: opts.dateFilter,\n                        okLabel: scope.okLabel,\n                        cancelLabel: scope.cancelLabel,\n                        targetEvent: ev\n                    }).then(function(time) {\n                        updateDate(time, true);\n                    }, function (error) {\n                        if (opts.clearOnCancel) {\n                            updateDate(null, true);\n                        }\n                    });\n                };\n\n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewVaue)\n                        updateDate(event.target.value);\n                }\n\n                inputElement.on(\"reset input blur\", onInputElementEvents);\n\n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                });\n\n                // revalidate on constraint change\n                scope.$watch(\"minDate + maxDate\", function() {\n                    ngModel.$validate();\n                });\n            }\n        }\n    };\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(viewValue, scope.format);\n            };\n\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(viewValue, scope.format, scope.minDate);\n            };\n\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\n            };\n\n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\n            };\n\n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n                    minDate: scope.minDate,\n                    maxDate: scope.maxDate,\n                    dateFilter: scope.dateFilter,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    targetEvent: ev\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n/* global moment, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, ampm, $mdMedia) {\n    var self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = moment(time);\n    this.autoSwitch = !!autoSwitch;\n    this.ampm = !!ampm;\n\n    this.hoursFormat = self.ampm ? \"h\" : \"H\";\n    this.minutesFormat = \"mm\";\n\n    this.clockHours = parseInt(this.time.format(this.hoursFormat));\n    this.clockMinutes = parseInt(this.time.format(this.minutesFormat));\n\n    $scope.$mdMedia = $mdMedia;\n\n    this.switchView = function() {\n        self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n    };\n\n    this.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n    };\n\n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var self = this;\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n\n    this.$onInit = function () {\n        self.STEP_DEG = 360 / 12;\n        self.steps = [];\n        this.CLOCK_TYPES = {\n            \"hours\": {\n                range: self.ampm ? 12 : 24,\n            },\n            \"minutes\": {\n                range: 60,\n            }\n        };\n        self.type = self.type || \"hours\";\n\n        switch (self.type) {\n            case TYPE_HOURS:\n                var f = self.ampm ? 1 : 2;\n                var t = self.ampm ? 12 : 23;\n                for(var i = f; i <= t; i+=f)\n                    self.steps.push(i);\n                if (!self.ampm) self.steps.push(0);\n                self.selected = self.time.hours() || 0;\n                if(self.ampm && self.selected > 12) self.selected -= 12;\n\n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n\n                break;\n        }\n    };\n\n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return {\n\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n\n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n\n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n\n    this.setTime = function(time, type) {\n        this.selected = time;\n\n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.ampm && self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n\n    };\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?',\n            'ampm': '=?'\n        },\n        replace: true,\n        template: '<md-card class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step || (step == clock.steps[clock.steps.length - 1] && clock.selected == 0), \\'md-raised\\': raised || clock.selected == step  }\" ng-mouseenter=\"raised = true\" ng-mouseleave=\"raised = false\" class=\"md-icon-button mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</md-card>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n\t\t\t\ttimepickerCtrl = scope.$parent.timepicker;\n\t\t\t\t\n            scope.raised = false;\n\n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            };\n\n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n\n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n\n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent);\n\n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        PARENT_GETTER = function() { return undefined };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.setDialogParentGetter = function(fn) {\n        PARENT_GETTER = fn;\n    };\n\n    this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\n        var timePicker = function(time, options) {\n            if(!angular.isDate(time)) time = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            var labelOk = options.okLabel || $mdpLocale.time.okLabel || LABEL_OK;\n            var labelCancel = options.cancelLabel || $mdpLocale.time.cancelLabel || LABEL_CANCEL;\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'time', 'autoSwitch', 'ampm', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(timepicker.hoursFormat) }}</span>:' +\n\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(timepicker.minutesFormat) }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" ng-show=\"timepicker.ampm\" class=\"mdp-timepicker-selected-ampm\">' +\n\n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\n                                    '</div>' +\n\n                                '</md-toolbar>' +\n                                '<md-content>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n                                        '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n                                        '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n\n                                    '<md-dialog-actions layout=\"row\">' +\n                                        '<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</md-content>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch,\n                    ampm: angular.isDefined(options.ampm) ? options.ampm : $mdpLocale.time.ampm\n                },\n                multiple: true,\n                parent: PARENT_GETTER()\n            });\n        };\n\n        return timePicker;\n    }];\n});\n\nfunction compareTimeValidator(value, format, otherTime, comparator) {\n    // take only the date part, not the time part\n    if (angular.isDate(otherTime)) {\n        otherTime = moment(otherTime).format(format);\n    }\n    otherTime = moment(otherTime, format, true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !otherTime.isValid() ||\n            comparator(date, otherTime);\n}\n\nfunction minTimeValidator(value, format, minTime) {\n    return compareTimeValidator(value, format, minTime, function(t, mt) { return t.isSameOrAfter(mt); });\n}\n\nfunction maxTimeValidator(value, format, maxTime) {\n    return compareTimeValidator(value, format, maxTime, function(t, mt) { return t.isSameOrBefore(mt); });\n}\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", \"$mdpLocale\", function($mdpTimePicker, $timeout, $mdpLocale) {\n    return  {\n        restrict: 'E',\n        require: ['ngModel', \"^^?form\"],\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat) || $mdpLocale.time.noFloat,\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) || $mdpLocale.time.openOnClick;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input name=\"{{ inputName }}\" ng-model=\"model.$viewValue\" ng-required=\"required()\" type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"{{placeholder}}\" placeholder=\"{{placeholder}}\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minTime\": \"=?mdpMinTime\",\n            \"maxTime\": \"=?mdpMaxTime\",\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"ampm\": \"=?mdpAmpm\",\n            \"inputName\": \"@?mdpInputName\",\n            \"clearOnCancel\": \"=?mdpClearOnCancel\"\n        },\n        link: function(scope, element, attrs, controllers, $transclude) {\n            var ngModel = controllers[0];\n            var form = controllers[1];\n\n            var opts = {\n                get minTime() {\n                    return scope.minTime || $mdpLocale.time.minTime;\n                },\n                get maxTime() {\n                    return scope.maxTime || $mdpLocale.time.maxTime;\n                },\n                get clearOnCancel() {\n                    return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.time.clearOnCancel;\n                }\n            };\n\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n            $transclude(function(clone) {\n                inputContainer.append(clone);\n            });\n\n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n            scope.type = scope.timeFormat || $mdpLocale.time.timeFormat ? \"text\" : \"time\";\n            scope.timeFormat = scope.timeFormat || $mdpLocale.time.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch === undefined ? $mdpLocale.time.autoSwitch : scope.autoSwitch;\n            scope.model = ngModel;\n\n            scope.isError = function() {\n                return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\n            };\n\n            scope.required = function() {\n                return !!attrs.required;\n            };\n\n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n\n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && moment(value);\n                if(time && time.isValid()) {\n                    var strVal = time.format(scope.timeFormat);\n                    updateInputElement(strVal);\n                    return strVal;\n                } else {\n                    updateInputElement(null);\n                    return null;\n                }\n            });\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n\n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n            \n            ngModel.$validators.minTime = function(modelValue, viewValue) {\n                return minTimeValidator(viewValue, scope.timeFormat, opts.minTime);\n            };\n\n            ngModel.$validators.maxTime = function(modelValue, viewValue) {\n                return maxTimeValidator(viewValue, scope.timeFormat, opts.maxTime);\n            };\n\n            ngModel.$parsers.unshift(function(value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n\n                        parsed = originalModel;\n                    }\n                    return parsed.toDate();\n\n                } else\n                    return null;\n            });\n\n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n\n            function updateTime(time) {\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n                    strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n\n                if(!ngModel.$pristine &&\n\n                    messages.hasClass(\"md-auto-hide\") &&\n\n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                ngModel.$render();\n            }\n\n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    autoSwitch: scope.autoSwitch,\n                    ampm: scope.ampm\n                }).then(function(time) {\n                    updateTime(time, true);\n                }, function (error) {\n                    if (opts.clearOnCancel) {\n                        updateTime(null, true);\n                    }\n                });\n            };\n\n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n\n            inputElement.on(\"reset input blur\", onInputElementEvents);\n\n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            });\n\n            // revalidate on constraint change\n            scope.$watch(\"minTime + maxTime\", function() {\n                ngModel.$validate();\n            });\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"ampm\": \"=?mdpAmpm\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    ampm: scope.ampm\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n})();"],"names":["module","angular","DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","options","self","this","date","moment","minDate","isValid","maxDate","displayFormat","dateFilter","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","noop","then","CalendarCtrl","$onInit","daysInMonth","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","$watch","unix","newValue","oldValue","updateDaysInMonth","getDaysInMonth","days","firstDay","day","arr","length","i","value","enabled","isDayEnabled","push","selectDate","dom","nextMonth","prevMonth","subtract","formatValidator","format","isDate","compareDateValidator","otherDate","comparator","minDateValidator","d","md","isSameOrAfter","maxDateValidator","isSameOrBefore","filterValidator","filter","TimePickerCtrl","time","autoSwitch","ampm","VIEW_HOURS","VIEW_MINUTES","currentView","hoursFormat","minutesFormat","clockHours","parseInt","clockMinutes","switchView","setAM","hours","hour","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","minutes","type","f","t","selected","getPointerStyle","divider","degrees","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","compareTimeValidator","otherTime","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","factory","minTime","maxTime","okLabel","cancelLabel","timeFormat","noFloat","openOnClick","clearOnCancel","dateFormat","directive","$mdUtil","restrict","priority","compile","element","getClosest","toggleClass","provider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","PARENT_GETTER","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","setDialogParentGetter","fn","$get","$mdpLocale","Date","now","isObject","labelOk","labelCancel","show","controller","controllerAs","clickOutsideToClose","template","targetEvent","locals","multiple","parent","$animate","bindToController","link","scope","attrs","ctrl","animElements","querySelector","map","a","raised","direction","addClass","removeClass","$mdpDatePicker","require","transclude","isDefined","mdpNoFloat","mdpOpenOnClick","mdpDisabled","placeholder","disabled","inputName","pre","constollers","$transclude","post","controllers","ngModel","form","opts","inputElement","inputContainer","inputContainerCtrl","messages","clone","append","updateInputElement","setHasValue","$isEmpty","updateDate","strValue","$setViewValue","$pristine","hasClass","$render","onInputElementEvents","event","target","$viewVaue","model","isError","$invalid","$submitted","required","$formatters","unshift","strVal","$validators","modelValue","viewValue","isUndefined","$parsers","originalModel","parsed","$modelValue","month","showPicker","ev","error","on","$on","off","$validate","replace","onEvent","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","timepickerCtrl","$parent","timepicker","e","$mdpTimePicker","updateTime","undefined","$error","setInvalid","Object","keys","mt","seconds"],"mappings":"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"}