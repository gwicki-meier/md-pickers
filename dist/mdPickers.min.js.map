{"version":3,"file":"mdPickers.min.js","sources":["mdPickers.min.js"],"sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\n\nvar module = angular.module(\"mdPickers\", [\n    \"ngMaterial\",\n    \"ngAnimate\",\n    \"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $mdIconProvider.icon(icon.id, icon.url);\n    });\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $templateCache.put(icon.url, icon.svg);\n    });\n}]);\n\n\nfunction setCurrentSettingsToScope(scope, newSettings) {\n    const settings = Object.assign({}, newSettings);\n\n    scope.settings.currentLocale = \"en\";\n    scope.settings.disableTimezone = false;\n\n    if (settings.currentLocale) {\n        scope.settings.currentLocale = settings.currentLocale;\n    }\n    if (settings.locale) {\n        scope.settings.currentLocale = settings.locale;\n    }\n    if (settings.disableTimezone) {\n        scope.settings.disableTimezone = true;\n    }\n}\n\nfunction newDate(settings) {\n    let date = Date.now();\n    if (angular.isUndefined(settings)) {\n        return date;\n    }\n    let disableTimezone = false;\n    if (settings.disableTimezone) {\n        disableTimezone = true;\n    }\n    // If Timezone is disabled, we need to add the offset to the time, to set the current time to timepicker\n    if (disableTimezone) {\n        let offset = moment().utcOffset();\n        date = date + offset * 60 * 1000;\n    }\n    return date\n}\n\n\nvar extendedMoment = (function ({attrs, disableTimezone}){\n\n    class DateTime {\n        currentLocale = \"de-ch\";\n        disableTimezone = false;\n        moment;\n        constructor({attrs, disableTimezone}){\n            if (disableTimezone) {\n                this.moment = moment.utc(...attrs);\n                this.disableTimezone = true;\n            } else {\n                this.moment = moment.utc(...attrs).tz(moment.tz.guess())\n                this.disableTimezone = false;\n            }\n        }\n    }\n\n    let dt = new DateTime({attrs, disableTimezone})\n\n    DateTime.prototype.setLocale = function(value)  {\n        this.currentLocale = value;\n        this.moment.locale(value);\n        return this;\n    }\n\nreturn dt\n});\n\n\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\n/**\n * Created by Robin Thoni on 6/21/17.\n */\n\nmodule.factory('$mdpLocale', [function () {\n    return {\n        time: {\n            minTime: null,\n            maxTime: null,\n            okLabel: \"OK\",\n            cancelLabel: \"Cancel\",\n            timeFormat: \"HH:mm\",\n            noFloat: true,\n            openOnClick: false,\n            autoSwitch: false,\n            ampm: false,\n            clearOnCancel: false,\n        },\n        date: {\n            minDate: null,\n            maxDate: null,\n            okLabel: \"OK\",\n            cancelLabel: \"Cancel\",\n            dateFilter: null,\n            dateFormat: \"YYYY-MM-DD\",\n            displayFormat: \"ddd, MMM DD\",\n            noFloat: true,\n            openOnClick: false,\n            clearOnCancel: false\n        }\n    };\n}]);\n\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n\n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n\n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n\n            return {};\n        }\n    }\n\n}]);\n/* global dayjs, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    this.date = extendedMoment({attrs: [currentDate], disableTimezone: options.settings.disableTimezone});\n    this.date.setLocale(options.settings.currentLocale);\n    this.minDate = options.minDate && extendedMoment({attrs: [options.minDate], disableTimezone: options.settings.disableTimezone}).setLocale(options.settings.currentLocale)\n        .moment.isValid() ? extendedMoment({attrs: [options.minDate], disableTimezone: options.settings.disableTimezone}).setLocale(options.settings.currentLocale).moment : null;\n    this.maxDate = options.maxDate && extendedMoment({attrs: [options.maxDate], disableTimezone: options.settings.disableTimezone}).setLocale(options.settings.currentLocale)\n        .moment.isValid() ? extendedMoment({attrs: [options.maxDate], disableTimezone: options.settings.disableTimezone}).setLocale(options.settings.currentLocale).moment : null;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n\n    // validate min and max date\n    if (this.minDate && this.maxDate) {\n        if (this.maxDate.isBefore(this.minDate)) {\n            this.maxDate = extendedMoment({attrs: [this.minDate], disableTimezone: options.settings.disableTimezone}).setLocale(options.settings.currentLocale).moment.add(1, 'days');\n        }\n    }\n\n    if (this.date.moment) {\n        // check min date\n        if (this.minDate && this.date.moment.isBefore(this.minDate)) {\n            this.date.moment = extendedMoment({attrs: [this.minDate], disableTimezone: options.settings.disableTimezone}).setLocale(options.settings.currentLocale).moment;\n        }\n\n        // check max date\n        if (this.maxDate && this.date.moment.isAfter(this.maxDate)) {\n            this.date.moment = extendedMoment({attrs: [this.maxDate], disableTimezone: options.settings.disableTimezone}).setLocale(options.settings.currentLocale).moment;\n        }\n    }\n\n    this.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n            if(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n\n            return this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.moment.year();\n\n    this.selectYear = function(year) {\n        self.date.moment.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n\n    this.showYear = function() {\n\n        self.yearTopIndex = (self.date.moment.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.moment.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n\n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        var date = this.date.moment;\n\n        if (this.minDate && this.date.moment.isBefore(this.minDate)) {\n            date = extendedMoment({attrs: [this.minDate], disableTimezone: options.settings.disableTimezone}).setLocale(options.settings.currentLocale).moment;\n        }\n\n        if (this.maxDate && this.date.moment.isAfter(this.maxDate)) {\n            date = extendedMoment({attrs: [this.maxDate], disableTimezone: options.settings.disableTimezone}).setLocale(options.settings.currentLocale).moment;;\n        }\n        $mdDialog.hide(date.toDate());\n    };\n\n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })\n\n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\",\n        PARENT_GETTER = function() { return undefined };\n\n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;\n\n    };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.setDialogParentGetter = function(fn) {\n        PARENT_GETTER = fn;\n    };\n\n    this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\n        return function (currentDate, options) {\n            options.displayFormat = options.displayFormat || $mdpLocale.date.displayFormat || DISPLAY_FORMAT;\n            options.settings = options.settings || {disableTimezone: false, currentLocale: \"en\"};\n\n            if (!angular.isObject(options)) options = {};\n            if (!angular.isDate(currentDate)) {\n                currentDate = newDate(options.settings);\n            }\n\n            var labelOk = options.okLabel || $mdpLocale.date.okLabel || LABEL_OK;\n            var labelCancel = options.cancelLabel || $mdpLocale.date.cancelLabel || LABEL_CANCEL;\n\n            return $mdDialog.show({\n                controller: ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                    '<md-dialog-content layout=\"row\" layout-wrap>' +\n                    '<div layout=\"column\" layout-align=\"start center\">' +\n                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                    '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.moment.format(\\'YYYY\\') }}</span>' +\n                    '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.moment.format(datepicker.displayFormat) }}</span> ' +\n                    '</md-toolbar>' +\n\n                    '</div>' +\n\n                    '<div>' +\n\n                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                    '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                    '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                    '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                    '</div>' +\n                    '</md-virtual-repeat-container>' +\n                    '</div>' +\n                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                    '<md-dialog-actions layout=\"row\">' +\n                    '<span flex></span>' +\n                    '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n                    '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n                    '</md-dialog-actions>' +\n                    '</div>' +\n                    '</md-dialog-content>' +\n                    '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                },\n                multiple: true,\n                parent: PARENT_GETTER()\n            });\n        };\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n    var self = this;\n\n    this.$onInit = function () {\n        self.daysInMonth = [];\n        self.dow = self.date.moment.localeData().firstDayOfWeek();\n        self.weekDays = [].concat(\n            moment.weekdaysMin().slice(self.dow),\n            moment.weekdaysMin().slice(0, self.dow)\n        );\n        $scope.$watch(function () {\n            return self.date.moment.unix()\n        }, function (newValue, oldValue) {\n            if (newValue && newValue !== oldValue)\n                self.updateDaysInMonth();\n        });\n        self.updateDaysInMonth();\n    };\n\n    this.getDaysInMonth = function() {\n        var days = self.date.moment.daysInMonth(),\n            firstDay = extendedMoment({attrs: [self.date.moment], disableTimezone: self.date.disableTimezone}).setLocale(self.date.currentLocale).moment.date(1).day() - this.dow;\n\n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(extendedMoment({attrs: [self.date.moment], disableTimezone: self.date.disableTimezone}).setLocale(self.date.currentLocale).moment.date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n\n        return arr;\n    };\n\n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) &&\n\n            (!this.maxDate || this.maxDate >= day) &&\n\n            (!self.dateFilter || !self.dateFilter(day));\n    };\n\n    this.selectDate = function(dom) {\n        self.date.moment.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.moment.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.moment.subtract(1, 'months');\n    };\n\n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n\n    $scope.$watch(function() { return  self.date.moment.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    });\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.moment.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button\" aria-label=\"Select day\" ng-mouseenter=\"raised = true\" ng-mouseleave=\"raised = false\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.moment.date() == day.value, \\'md-raised\\': raised || calendar.date.moment.date() == day.value }\" ng-dblclick=\"datepicker.confirm()\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a);\n\n            });\n\n            scope.raised = false;\n\n            scope.$watch(function() { return  ctrl.date.moment.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n\n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n\n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(scope, value, format) {\n    return !value || angular.isDate(value) || extendedMoment({attrs: [value, format], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment.isValid();\n}\n\nfunction compareDateValidator(scope, value, format, otherDate, comparator) {\n    // take only the date part, not the time part\n    if (angular.isDate(otherDate)) {\n        otherDate = extendedMoment({attrs: [otherDate], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment.format(format);\n    }\n    otherDate = extendedMoment({attrs: [otherDate, format, scope.settings.currentLocale, true], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n    var date = extendedMoment({attrs: [value], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale)\n        .moment ? extendedMoment({attrs: [value], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale)\n        .moment :  extendedMoment({attrs: [value, format, true], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n\n    return !value ||\n            angular.isDate(value) ||\n            !otherDate.isValid() ||\n            comparator(date, otherDate);\n}\n\nfunction minDateValidator(scope, value, format, minDate) {\n    return compareDateValidator(scope, value, format, minDate, function(d, md) { return d.isSameOrAfter(md); });\n}\n\nfunction maxDateValidator(scope, value, format, maxDate) {\n    return compareDateValidator(scope, value, format, maxDate, function(d, md) { return d.isSameOrBefore(md); });\n}\n\nfunction filterValidator(scope, value, format, filter) {\n    var date = angular.isDate(value) ? extendedMoment({attrs: [value], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale)\n        .moment :  extendedMoment({attrs: [value, format, true], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n\n    return !value ||\n        angular.isDate(value) ||\n            !angular.isFunction(filter) ||\n            !filter(date.toDate());\n}\n\nfunction requiredValidator(scope, value, ngModel) {\n    return value\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", \"$mdpLocale\", function($mdpDatePicker, $timeout, $mdpLocale) {\n    return  {\n        restrict: 'E',\n        require: ['ngModel', \"^^?form\"],\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat) || $mdpLocale.date.noFloat,\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) || $mdpLocale.date.openOnClick;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input size=\"10\" name=\"{{ inputName }}\"  ng-required=\"required()\" type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"{{placeholder}}\" placeholder=\"{{placeholder}}\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"inputName\": \"@?mdpInputName\",\n            \"clearOnCancel\": \"=?mdpClearOnCancel\"\n        },\n        link: {\n            pre: function(scope, element, attrs, controllers, $transclude) {\n\n            },\n            post: function(scope, element, attrs, controllers, $transclude) {\n                var ngModel = controllers[0];\n                var form = controllers[1];\n\n                var opts = {\n                    get minDate() {\n                        return scope.minDate || $mdpLocale.date.minDate;\n                    },\n                    get maxDate() {\n                        return scope.maxDate || $mdpLocale.date.maxDate;\n                    },\n                    get dateFilter() {\n                        return scope.dateFilter || $mdpLocale.date.dateFilter;\n                    },\n                    get clearOnCancel() {\n                        return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.date.clearOnCancel;\n                    },\n                    get settings() {\n                        return scope.settings;\n                    }\n                };\n\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n                $transclude(function(clone) {\n                    inputContainer.append(clone);\n                });\n\n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n                scope.type = scope.dateFormat || $mdpLocale.date.dateFormat ? \"text\" : \"date\";\n                scope.dateFormat = scope.dateFormat || $mdpLocale.date.dateFormat || \"YYYY-MM-DD\";\n                scope.model = ngModel;\n                scope.settings = {};\n\n                setCurrentSettingsToScope(scope, $mdpLocale.settings);\n\n                scope.isError = function() {\n                    return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\n                };\n\n                scope.required = function() {\n                    return !!attrs.required;\n                };\n\n\n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && extendedMoment({attrs: [value], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n                    if(date && date.isValid()) {\n\n                        var strVal = date.format(scope.dateFormat);\n                        updateInputElement(strVal);\n                        return null;\n                    } else {\n                        updateInputElement(null);\n                        return null;\n                    }\n                });\n\n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(scope, viewValue, scope.dateFormat);\n                };\n\n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(scope, viewValue, scope.dateFormat, opts.minDate);\n                };\n\n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(scope, viewValue, scope.dateFormat, opts.maxDate);\n                };\n\n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(scope, viewValue, scope.dateFormat, opts.dateFilter);\n                };\n\n                ngModel.$validators.required = function(modelValue, viewValue) {\n                    return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n                };\n\n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = extendedMoment({attrs: [value], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = extendedMoment({attrs: [ngModel.$modelValue], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n\n                            parsed = originalModel;\n                        }\n                        return parsed.toDate();\n                    } else\n                        return null;\n                });\n\n                // update input element value\n                function updateInputElement(value) {\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n\n                function updateDate(date, fromEvent) {\n                    var value;\n                    var ok = true;\n                    if (fromEvent) {\n                        if (date === \"\") {\n                            var previousValue = ngModel.$modelValue;\n                            ok = false;\n                            if (previousValue === null) {\n                                previousValue = newDate(scope.settings)\n                                // No Time or Date was set before, so we set the current date\n                                ok = true;\n                            }\n                            value = extendedMoment({attrs: [previousValue], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n                        } else {\n                            value = extendedMoment({\n                                attrs: [date, scope.dateFormat, scope.settings.currentLocale, true],\n                                disableTimezone: scope.settings.disableTimezone\n                            }).setLocale(scope.settings.currentLocale).moment;\n                            if (!value.isValid() && (scope.dateFormat === \"L\")) {\n                                value = extendedMoment({\n                                    attrs: [date, \"l\", scope.settings.currentLocale, true],\n                                    disableTimezone: scope.settings.disableTimezone\n                                }).setLocale(scope.settings.currentLocale).moment;\n                            }\n                            value.minutes(0);\n                            value.hours(0)\n                        }\n                    } else {\n                        if (angular.isDate(date)) {\n                            value = extendedMoment({attrs: [date, null, true], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n                        } else {\n                            value = extendedMoment({attrs: [date, scope.dateFormat, true], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n                        }\n                    }\n\n                    value.locale(scope.settings.currentLocale);\n                    var strValue = value.format(scope.dateFormat);\n\n                    if(value.isValid() && ok) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(value);\n                    } else {\n                        updateInputElement(strValue);\n\n                    }\n\n                    if(!ngModel.$pristine &&\n\n                        messages.hasClass(\"md-auto-hide\") &&\n\n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                    ngModel.$render();\n                }\n\n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                        minDate: opts.minDate,\n                        maxDate: opts.maxDate,\n                        dateFilter: opts.dateFilter,\n                        okLabel: scope.okLabel,\n                        cancelLabel: scope.cancelLabel,\n                        targetEvent: ev,\n                        settings: opts.settings\n                    }).then(function(time) {\n                        updateDate(time);\n                    }, function (error) {\n                        if (opts.clearOnCancel) {\n                            updateDate(null);\n                        }\n                    });\n                };\n\n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewValue)\n                        updateDate(event.target.value, true);\n                }\n\n                inputElement.bind(\"blur\", onInputElementEvents);\n\n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                });\n\n                // revalidate on constraint change\n                scope.$watch(\"minDate + maxDate\", function() {\n                    ngModel.$validate();\n                });\n            }\n        }\n    };\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(scope, viewValue, scope.format);\n            };\n\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(scope, viewValue, scope.format, scope.minDate);\n            };\n\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(scope, viewValue, scope.format, scope.maxDate);\n            };\n\n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(scope, viewValue, scope.format, scope.dateFilter);\n            };\n\n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n                    minDate: scope.minDate,\n                    maxDate: scope.maxDate,\n                    dateFilter: scope.dateFilter,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    targetEvent: ev\n                }).then(function(time) {\n                    ngModel.$setViewValue(extendedMoment({attrs: [time], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment.format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n/* global moment, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, ampm, $mdMedia, options) {\n    var self = this;\n\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = extendedMoment({attrs: [time], disableTimezone: options.settings.disableTimezone});\n    this.time.setLocale(options.settings.currentLocale);\n    this.ampm = !!ampm;\n\n    this.hoursFormat = self.ampm ? \"h\" : \"H\";\n    this.minutesFormat = \"mm\";\n\n    this.clockHours = parseInt(this.time.moment.format(this.hoursFormat));\n    this.clockMinutes = parseInt(this.time.moment.format(this.minutesFormat));\n\n    $scope.$mdMedia = $mdMedia;\n\n    this.switchView = function() {\n        self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n    };\n\n    this.setAM = function() {\n        if(self.time.moment.hours() >= 12)\n            self.time.moment.hour(self.time.moment.hour() - 12);\n    };\n\n    this.setPM = function() {\n        if(self.time.moment.hours() < 12)\n            self.time.moment.hour(self.time.moment.hour() + 12);\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.moment.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var self = this;\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n\n    this.$onInit = function () {\n        self.STEP_DEG = 360 / 12;\n        self.steps = [];\n        this.CLOCK_TYPES = {\n            \"hours\": {\n                range: self.ampm ? 12 : 24,\n            },\n            \"minutes\": {\n                range: 60,\n            }\n        };\n        self.type = self.type || \"hours\";\n\n        switch (self.type) {\n            case TYPE_HOURS:\n                var f = self.ampm ? 1 : 2;\n                var t = self.ampm ? 12 : 23;\n                for(var i = f; i <= t; i+=f)\n                    self.steps.push(i);\n                if (!self.ampm) self.steps.push(0);\n                self.selected = self.time.moment.hours() || 0;\n                if(self.ampm && self.selected > 12) self.selected -= 12;\n\n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.moment.minutes() || 0;\n\n                break;\n        }\n    };\n\n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return {\n\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n\n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n\n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n\n    this.setTime = function(time, type) {\n        this.selected = time;\n\n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.ampm && self.time.format(\"A\") === \"PM\") time += 12;\n                this.time.moment.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.moment.minutes(time);\n                break;\n        }\n\n    };\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?',\n            'ampm': '=?'\n        },\n        replace: true,\n        template: '<md-card class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step || (step == clock.steps[clock.steps.length - 1] && clock.selected == 0), \\'md-raised\\': raised || clock.selected == step  }\" ng-mouseenter=\"raised = true\" ng-mouseleave=\"raised = false\" class=\"md-icon-button mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</md-card>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n\t\t\t\ttimepickerCtrl = scope.$parent.timepicker;\n\t\t\t\t\n            scope.raised = false;\n\n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            };\n\n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n\n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n\n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent);\n\n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        PARENT_GETTER = function() { return undefined };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.setDialogParentGetter = function(fn) {\n        PARENT_GETTER = fn;\n    };\n\n    this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\n        return function (time, options) {\n            options.settings = options.settings || {disableTimezone: false, currentLocale: \"en\"};\n\n            if (!angular.isObject(options)) options = {};\n            if (!angular.isDate(time)) {\n                time = newDate(options.settings);\n            }\n\n            var labelOk = options.okLabel || $mdpLocale.time.okLabel || LABEL_OK;\n            var labelCancel = options.cancelLabel || $mdpLocale.time.cancelLabel || LABEL_CANCEL;\n\n            return $mdDialog.show({\n                controller: ['$scope', '$mdDialog', 'time', 'autoSwitch', 'ampm', '$mdMedia', 'options', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                    '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                    '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                    '<div class=\"mdp-timepicker-selected-time\">' +\n                    '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.moment.format(timepicker.hoursFormat) }}</span>:' +\n\n                    '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.moment.format(timepicker.minutesFormat) }}</span>' +\n                    '</div>' +\n                    '<div layout=\"column\" ng-show=\"timepicker.ampm\" class=\"mdp-timepicker-selected-ampm\">' +\n\n                    '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.moment.hours() < 12 }\">AM</span>' +\n                    '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.moment.hours() >= 12 }\">PM</span>' +\n                    '</div>' +\n\n                    '</md-toolbar>' +\n                    '<md-content>' +\n                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n                    '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n                    '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                    '</div>' +\n\n                    '<md-dialog-actions layout=\"row\">' +\n                    '<span flex></span>' +\n                    '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n                    '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n                    '</md-dialog-actions>' +\n                    '</md-content>' +\n                    '</md-dialog-content>' +\n                    '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch,\n                    ampm: angular.isDefined(options.ampm) ? options.ampm : $mdpLocale.time.ampm, options: options\n                },\n                multiple: true,\n                parent: PARENT_GETTER()\n            });\n        };\n    }];\n});\n\nfunction compareTimeValidator(scope, value, format, otherTime, comparator) {\n    // take only the date part, not the time part\n    if (angular.isDate(otherTime)) {\n        otherTime = extendedMoment({attrs: [otherTime], disableTimezone: scope.settings.disableTimezone}).moment.format(format);\n    }\n    otherTime = extendedMoment({attrs: [otherTime, format, true], disableTimezone: scope.settings.disableTimezone}).moment;\n    var date = angular.isDate(value) ? extendedMoment({attrs: [value], disableTimezone: scope.settings.disableTimezone}).moment :  extendedMoment({attrs: [value, format, true], disableTimezone: scope.settings.disableTimezone}).moment;\n\n    return !value ||\n            angular.isDate(value) ||\n            !otherTime.isValid() ||\n            comparator(date, otherTime);\n}\n\nfunction minTimeValidator(scope, value, format, minTime) {\n    return compareTimeValidator(scope, value, format, minTime, function(t, mt) { return t.isSameOrAfter(mt); });\n}\n\nfunction maxTimeValidator(scope, value, format, maxTime) {\n    return compareTimeValidator(scope, value, format, maxTime, function(t, mt) { return t.isSameOrBefore(mt); });\n}\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", \"$mdpLocale\", function($mdpTimePicker, $timeout, $mdpLocale) {\n    return  {\n        restrict: 'E',\n        require: ['ngModel', \"^^?form\"],\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat) || $mdpLocale.time.noFloat,\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) || $mdpLocale.time.openOnClick;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input size=\"5\" name=\"{{ inputName }}\" ng-required=\"required()\" type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"{{placeholder}}\" placeholder=\"{{placeholder}}\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minTime\": \"=?mdpMinTime\",\n            \"maxTime\": \"=?mdpMaxTime\",\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"ampm\": \"=?mdpAmpm\",\n            \"inputName\": \"@?mdpInputName\",\n            \"clearOnCancel\": \"=?mdpClearOnCancel\"\n        },\n        link: function(scope, element, attrs, controllers, $transclude) {\n            var ngModel = controllers[0];\n            var form = controllers[1];\n\n            var opts = {\n                get minTime() {\n                    return scope.minTime || $mdpLocale.time.minTime;\n                },\n                get maxTime() {\n                    return scope.maxTime || $mdpLocale.time.maxTime;\n                },\n                get clearOnCancel() {\n                    return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.time.clearOnCancel;\n                },\n                get settings() {\n                    return scope.settings;\n                }\n            };\n\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n            $transclude(function(clone) {\n                inputContainer.append(clone);\n            });\n\n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n            scope.type = scope.timeFormat || $mdpLocale.time.timeFormat ? \"text\" : \"time\";\n            scope.timeFormat = scope.timeFormat || $mdpLocale.time.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch === undefined ? $mdpLocale.time.autoSwitch : scope.autoSwitch;\n            scope.model = ngModel;\n            scope.settings =  {};\n\n            setCurrentSettingsToScope(scope, $mdpLocale.settings);\n\n            scope.isError = function() {\n                return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\n            };\n\n            scope.required = function() {\n                return !!attrs.required;\n            };\n\n\n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n\n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && extendedMoment({attrs: [value], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n                if(time && time.isValid()) {\n                    var strVal = time.format(scope.timeFormat);\n                    updateInputElement(strVal);\n                    return null;\n                } else {\n                    updateInputElement(null);\n                    return null;\n                }\n            });\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || extendedMoment({attrs: [viewValue, scope.timeFormat], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment.isValid();\n            };\n\n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n            \n            ngModel.$validators.minTime = function(modelValue, viewValue) {\n                return minTimeValidator(scope, viewValue, scope.timeFormat, opts.minTime);\n            };\n\n            ngModel.$validators.maxTime = function(modelValue, viewValue) {\n                return maxTimeValidator(scope, viewValue, scope.timeFormat, opts.maxTime);\n            };\n\n            ngModel.$parsers.unshift(function(value) {\n                var parsed = extendedMoment({attrs: [value], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = extendedMoment({attrs: [ngModel.$modelValue], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n\n                        parsed = originalModel;\n                    }\n\n                    return parsed.toDate();\n\n                } else\n                    return null;\n            });\n\n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n\n            function updateTime(time, fromEvent) {\n                var value;\n                var ok = true;\n                if (fromEvent) {\n                    if (time.length === 4 && time.split(\":\").length === 1) {\n                        time = time.slice(0, 2) + \":\" + time.slice(2, 4);\n                    }\n                    if (time === \"\") {\n                        var previousValue = ngModel.$modelValue;\n                        ok = false;\n                        if (previousValue === null) {\n                            previousValue = newDate(scope.settings)\n                            // No Time or Date was set before, so we set the current time\n                            ok = true;\n                        }\n                        value = extendedMoment({attrs: [previousValue], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n\n                    } else {\n                        value = extendedMoment({attrs: [], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n                        value.minutes(time.split(\":\")[1]);\n                        value.hours(time.split(\":\")[0]);\n                    }\n                } else {\n                    if (angular.isDate(time)) {\n                        value = extendedMoment({attrs: [time, null, true], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment;\n                    } else {\n                        value = extendedMoment({attrs: [time, scope.timeFormat], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment\n                    }\n                }\n\n                value.locale(scope.settings.currentLocale);\n                var strValue = value.format(scope.timeFormat);\n\n                if(value.isValid() && ok) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(value);\n                } else {\n                    updateInputElement(strValue);\n                }\n\n                if(!ngModel.$pristine &&\n\n                    messages.hasClass(\"md-auto-hide\") &&\n\n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                ngModel.$render();\n            }\n\n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    autoSwitch: scope.autoSwitch,\n                    ampm: scope.ampm,\n                    settings: opts.settings\n                }).then(function(time){\n                    updateTime(time);\n                }, function (error) {\n                    if (opts.clearOnCancel) {\n                        updateTime(null);\n                    }\n                });\n            };\n\n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewValue)\n                    updateTime(event.target.value, true);\n            }\n\n            inputElement.bind(\"blur\", onInputElementEvents);\n\n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            });\n\n            // revalidate on constraint change\n            scope.$watch(\"minTime + maxTime\", function() {\n                ngModel.$validate();\n            });\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"ampm\": \"=?mdpAmpm\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    ampm: scope.ampm\n                }).then(function(time) {\n                    ngModel.$setViewValue(extendedMoment({attrs: [time], disableTimezone: scope.settings.disableTimezone}).setLocale(scope.settings.currentLocale).moment.format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n})();"],"names":["module","angular","setCurrentSettingsToScope","scope","newSettings","settings","Object","assign","currentLocale","disableTimezone","locale","newDate","let","date","Date","now","isUndefined","offset","moment","utcOffset","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","index","id","url","run","$templateCache","put","svg","extendedMoment","attrs","DateTime","constructor","this","utc","tz","guess","dt","prototype","setLocale","value","DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","options","self","minDate","isValid","maxDate","displayFormat","dateFilter","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","noop","then","CalendarCtrl","$onInit","daysInMonth","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","$watch","unix","newValue","oldValue","updateDaysInMonth","getDaysInMonth","days","firstDay","day","arr","length","i","enabled","isDayEnabled","push","selectDate","dom","nextMonth","prevMonth","subtract","formatValidator","format","isDate","compareDateValidator","otherDate","comparator","minDateValidator","d","md","isSameOrAfter","maxDateValidator","isSameOrBefore","filterValidator","filter","TimePickerCtrl","time","autoSwitch","ampm","VIEW_HOURS","VIEW_MINUTES","currentView","hoursFormat","minutesFormat","clockHours","parseInt","clockMinutes","switchView","setAM","hours","hour","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","minutes","type","f","t","selected","getPointerStyle","divider","degrees","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","compareTimeValidator","otherTime","constant","factory","minTime","maxTime","okLabel","cancelLabel","timeFormat","noFloat","openOnClick","clearOnCancel","dateFormat","directive","$mdUtil","restrict","priority","compile","element","getClosest","toggleClass","provider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","PARENT_GETTER","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","setDialogParentGetter","fn","$get","$mdpLocale","isObject","labelOk","labelCancel","show","controller","controllerAs","clickOutsideToClose","template","targetEvent","locals","multiple","parent","$animate","bindToController","link","ctrl","animElements","querySelector","map","a","raised","direction","addClass","removeClass","$mdpDatePicker","require","transclude","isDefined","mdpNoFloat","mdpOpenOnClick","mdpDisabled","placeholder","disabled","inputName","pre","controllers","$transclude","post","ngModel","form","opts","inputElement","inputContainer","inputContainerCtrl","messages","clone","append","updateInputElement","setHasValue","$isEmpty","updateDate","fromEvent","ok","strValue","previousValue","$modelValue","$setViewValue","$pristine","hasClass","$render","onInputElementEvents","event","target","$viewValue","model","isError","$invalid","$submitted","required","$formatters","unshift","$validators","modelValue","viewValue","$parsers","originalModel","parsed","month","showPicker","ev","error","bind","$on","off","$validate","on","replace","onEvent","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","timepickerCtrl","$parent","timepicker","e","$mdpTimePicker","updateTime","split","undefined","$error","setInvalid","keys","mt","seconds"],"mappings":"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"}