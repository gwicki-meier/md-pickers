{"version":3,"file":"mdPickers.min.js","sources":["mdPickers.min.js"],"sourcesContent":["(function() {\n\"use strict\";\n/* global dayjs, angular */\n\n\nvar module = angular.module(\"mdPickers\", [\n    \"ngMaterial\",\n    \"ngAnimate\",\n    \"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $mdIconProvider.icon(icon.id, icon.url);\n    });\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $templateCache.put(icon.url, icon.svg);\n    });\n}]);\n\n\nfunction setCurrentSettingsToScope(scope) {\n    var settings = scope.settings;\n\n    if (angular.isDefined(scope.mdpSettings)) {\n        var mdpSettings = scope.mdpSettings;\n        if (mdpSettings.locale) {\n            settings.currentLocale = mdpSettings.locale;\n        } else {\n            settings.currentLocale = \"en\";\n        }\n\n        // If \"local\", use timezone from Browser\n        if (angular.isDefined(mdpSettings.timezone)) {\n            settings.timezone = mdpSettings.timezone;\n            settings.overrideTimezone = true;\n        }\n\n        settings.dateType = mdpSettings.dateType;\n\n    } else {\n        settings.currentLocale = \"en\";\n        settings.overrideTimezone = false;\n        settings.dateType = \"date\";\n    }\n}\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\n/**\n * Created by Robin Thoni on 6/21/17.\n */\n\nmodule.factory('$mdpLocale', [function () {\n    return {\n        time: {\n            minTime: null,\n            maxTime: null,\n            okLabel: \"OK\",\n            cancelLabel: \"Cancel\",\n            timeFormat: \"HH:mm\",\n            noFloat: true,\n            openOnClick: false,\n            autoSwitch: false,\n            ampm: false,\n            clearOnCancel: false,\n        },\n        date: {\n            minDate: null,\n            maxDate: null,\n            okLabel: \"OK\",\n            cancelLabel: \"Cancel\",\n            dateFilter: null,\n            dateFormat: \"YYYY-MM-DD\",\n            displayFormat: \"ddd, MMM DD\",\n            noFloat: true,\n            openOnClick: false,\n            clearOnCancel: false\n        }\n    };\n}]);\n\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n\n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n\n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n\n            return {};\n        }\n    }\n\n}]);\n/* global dayjs, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    var settings = options.settings;\n\n    this.date = dayjs(currentDate);\n    this.minDate = options.minDate && dayjs(options.minDate).isValid() ? dayjs(options.minDate) : null;\n    this.maxDate = options.maxDate && dayjs(options.maxDate).isValid() ? dayjs(options.maxDate) : null;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n\n    // validate min and max date\n    if (this.minDate && this.maxDate) {\n        if (this.maxDate.isBefore(this.minDate)) {\n            this.maxDate = dayjs(this.minDate).add(1, 'days');\n        }\n    }\n\n    if (this.date) {\n        // check min date\n        if (this.minDate && this.date.isBefore(this.minDate)) {\n            this.date = dayjs(this.minDate);\n        }\n\n        // check max date\n        if (this.maxDate && this.date.isAfter(this.maxDate)) {\n            this.date = dayjs(this.maxDate);\n        }\n    }\n\n    this.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n            if(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n\n            return this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n    this.selectYear = function(year) {\n        self.date = self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n\n    this.showYear = function() {\n\n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n\n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        var date = this.date;\n\n        if (this.minDate && this.date.isBefore(this.minDate)) {\n            date = dayjs(this.minDate);\n        }\n\n        if (this.maxDate && this.date.isAfter(this.maxDate)) {\n            date = dayjs(this.maxDate);\n        }\n\n        $mdDialog.hide(date);\n    };\n\n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })\n\n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\",\n        PARENT_GETTER = function() { return undefined };\n\n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;\n\n    };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.setDialogParentGetter = function(fn) {\n        PARENT_GETTER = fn;\n    };\n\n    this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\n        return function (currentDate, options) {\n            var settings = options.settings;\n            if (!dayjs(currentDate).isValid()) {\n                currentDate = dayjs().locale(settings.currentLocale);\n                if (settings.overrideTimezone) {\n                    currentDate = currentDate.tz(settings.timezone, true);\n                } else {\n                    currentDate = currentDate.tz(dayjs.tz.guess(), true)\n                }\n            } else {\n                currentDate = dayjs(currentDate);\n            }\n\n            if (!angular.isObject(options)) options = {};\n\n            options.displayFormat = options.displayFormat || $mdpLocale.date.displayFormat || DISPLAY_FORMAT;\n\n            var labelOk = options.okLabel || $mdpLocale.date.okLabel || LABEL_OK;\n            var labelCancel = options.cancelLabel || $mdpLocale.date.cancelLabel || LABEL_CANCEL;\n\n            return $mdDialog.show({\n                controller: ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                    '<md-dialog-content layout=\"row\" layout-wrap>' +\n                    '<div layout=\"column\" layout-align=\"start center\">' +\n                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                    '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                    '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                    '</md-toolbar>' +\n\n                    '</div>' +\n\n                    '<div>' +\n\n                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                    '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                    '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                    '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                    '</div>' +\n                    '</md-virtual-repeat-container>' +\n                    '</div>' +\n                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                    '<md-dialog-actions layout=\"row\">' +\n                    '<span flex></span>' +\n                    '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n                    '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n                    '</md-dialog-actions>' +\n                    '</div>' +\n                    '</md-dialog-content>' +\n                    '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                },\n                multiple: true,\n                parent: PARENT_GETTER()\n            });\n        };\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n    var self = this;\n\n    this.$onInit = function () {\n        self.daysInMonth = [];\n        self.dow = dayjs.localeData().firstDayOfWeek();\n        self.weekDays = [].concat(\n            dayjs.weekdaysMin().slice(self.dow),\n            dayjs.weekdaysMin().slice(0, self.dow)\n        );\n        $scope.$watch(function () {\n            return self.date.unix()\n        }, function (newValue, oldValue) {\n            if (newValue && newValue !== oldValue)\n                self.updateDaysInMonth();\n        });\n        self.updateDaysInMonth();\n    };\n\n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = self.date.date(1).day() - this.dow;\n\n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(self.date.date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n\n        return arr;\n    };\n\n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) &&\n\n            (!this.maxDate || this.maxDate >= day) &&\n\n            (!self.dateFilter || !self.dateFilter(day));\n    };\n\n    this.selectDate = function(dom) {\n        self.date = self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date = self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date = self.date.subtract(1, 'months');\n    };\n\n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n\n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    });\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button\" aria-label=\"Select day\" ng-mouseenter=\"raised = true\" ng-mouseleave=\"raised = false\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value, \\'md-raised\\': raised || calendar.date.date() == day.value }\" ng-dblclick=\"datepicker.confirm()\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a);\n\n            });\n\n            scope.raised = false;\n\n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n\n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n\n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(scope, value, format) {\n    return !value || dayjs(value).isValid() ||dayjs(value, format, scope.settings.currentLocale,true).isValid();\n}\n\nfunction compareDateValidator(scope, value, format, otherDate, comparator) {\n    // take only the date part, not the time part\n    if (dayjs(otherDate).isValid()) {\n        otherDate = dayjs(otherDate).format(format);\n    }\n    otherDate = dayjs(otherDate, format, scope.settings.currentLocale, true);\n    var date = dayjs(value).isValid() ? dayjs(value) :  dayjs(value, format, scope.settings.currentLocale, true);\n\n    return !value ||\n            dayjs(value).isValid() ||\n            !otherDate.isValid() ||\n            comparator(date, otherDate);\n}\n\nfunction minDateValidator(scope, value, format, minDate) {\n    return compareDateValidator(scope, value, format, minDate, function(d, md) { return d.isSameOrAfter(md); });\n}\n\nfunction maxDateValidator(scope, value, format, maxDate) {\n    return compareDateValidator(scope, value, format, maxDate, function(d, md) { return d.isSameOrBefore(md); });\n}\n\nfunction filterValidator(scope, value, format, filter) {\n    var date = dayjs(value).isValid() ? dayjs(value) :  dayjs(value, format, scope.settings.currentLocale, true);\n\n    return !value ||\n            dayjs(value).isValid() ||\n            !angular.isFunction(filter) ||\n            !filter(date.toDate());\n}\n\nfunction requiredValidator(scope, value, ngModel) {\n    return value\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", \"$mdpLocale\", function($mdpDatePicker, $timeout, $mdpLocale) {\n    return  {\n        restrict: 'E',\n        require: ['ngModel', \"^^?form\"],\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat) || $mdpLocale.date.noFloat,\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) || $mdpLocale.date.openOnClick;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input size=\"10\" name=\"{{ inputName }}\"  ng-required=\"required()\" type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"{{placeholder}}\" placeholder=\"{{placeholder}}\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"inputName\": \"@?mdpInputName\",\n            \"clearOnCancel\": \"=?mdpClearOnCancel\",\n            \"mdpSettings\": \"=?mdpSettings\"\n        },\n        link: {\n            pre: function(scope, element, attrs, constollers, $transclude) {\n\n            },\n            post: function(scope, element, attrs, controllers, $transclude) {\n                var ngModel = controllers[0];\n                var form = controllers[1];\n\n                var opts = {\n                    get minDate() {\n                        return scope.minDate || $mdpLocale.date.minDate;\n                    },\n                    get maxDate() {\n                        return scope.maxDate || $mdpLocale.date.maxDate;\n                    },\n                    get dateFilter() {\n                        return scope.dateFilter || $mdpLocale.date.dateFilter;\n                    },\n                    get clearOnCancel() {\n                        return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.date.clearOnCancel;\n                    },\n                    get settings() {\n                        return scope.settings;\n                    }\n                };\n\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n                $transclude(function(clone) {\n                    inputContainer.append(clone);\n                });\n\n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n                var settings = {};\n\n                scope.type = scope.dateFormat || $mdpLocale.date.dateFormat ? \"text\" : \"date\";\n                scope.dateFormat = scope.dateFormat || $mdpLocale.date.dateFormat || \"YYYY-MM-DD\";\n                scope.model = ngModel;\n                scope.settings = settings;\n\n                setCurrentSettingsToScope(scope);\n\n                scope.isError = function() {\n                    return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\n                };\n\n                scope.required = function() {\n                    return !!attrs.required;\n                };\n\n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = null;\n\n                    if (dayjs(value).isValid()) {\n                        date = dayjs(value);\n                        if (settings.overrideTimezone) {\n                            date = date.tz(settings.timezone, true);\n                        }\n                    }\n\n                    if(date && date.isValid()) {\n\n                        var strVal = date.format(scope.dateFormat);\n                        updateInputElement(strVal);\n                        return strVal;\n                    } else {\n                        updateInputElement(null);\n                        return null;\n                    }\n                });\n\n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(scope, viewValue, scope.dateFormat);\n                };\n\n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(scope, viewValue, scope.dateFormat, opts.minDate);\n                };\n\n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(scope, viewValue, scope.dateFormat, opts.maxDate);\n                };\n\n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(scope, viewValue, scope.dateFormat, opts.dateFilter);\n                };\n\n                ngModel.$validators.required = function(modelValue, viewValue) {\n                    return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n                };\n\n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = dayjs(value, scope.dateFormat, scope.settings.currentLocale, true);\n\n                    if(parsed.isValid()) {\n                        if(dayjs(ngModel.$modelValue).isValid()) {\n                            var originalModel = dayjs(ngModel.$modelValue);\n                            originalModel = originalModel.year(parsed.year());\n                            originalModel = originalModel.month(parsed.month());\n                            originalModel = originalModel.date(parsed.date());\n\n                            parsed = originalModel;\n                        }\n\n                        // Returns Dayjs object to the model (toDate)\n                        return parsed;\n\n                    } else\n                        return null;\n                });\n\n                // update input element value\n                function updateInputElement(value) {\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n\n                function updateDate(date, fromEvent) {\n\n                    var value = dayjs().locale(settings.currentLocale);\n\n                    if (scope.settings.overrideTimezone) {\n                        value = value.tz(settings.timezone, true);\n                    } else {\n                        value = value.tz(dayjs.tz.guess(), true)\n                    }\n\n                    if (date !== null) {\n                        if (dayjs(date).isValid() && !fromEvent) {\n                            value = dayjs(date);\n                        } else {\n                            value = dayjs(date, scope.dateFormat, scope.settings.currentLocale, true);\n                            if (!value.isValid() && (scope.dateFormat === \"L\")) {\n                                value = dayjs(date, \"l\", scope.settings.currentLocale, true);\n                            }\n\n                            if (scope.settings.overrideTimezone) {\n                                value = value.tz(scope.settings.timezone, true).local()\n                                value = value.tz(scope.settings.timezone)\n                            } else {\n                                value = value.tz(dayjs.tz.guess(), true)\n                            }\n                        }\n                    }\n\n                    var strValue = value.format(scope.dateFormat);\n\n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(value);\n                    } else {\n                        updateInputElement(ngModel.$viewValue);\n                    }\n\n                    if(!ngModel.$pristine &&\n\n                        messages.hasClass(\"md-auto-hide\") &&\n\n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                    ngModel.$render();\n                }\n\n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                        minDate: opts.minDate,\n                        maxDate: opts.maxDate,\n                        dateFilter: opts.dateFilter,\n                        okLabel: scope.okLabel,\n                        cancelLabel: scope.cancelLabel,\n                        targetEvent: ev,\n                        settings: opts.settings\n                    }).then(function(time) {\n                        updateDate(time, false);\n                    }, function (error) {\n                        if (opts.clearOnCancel) {\n                            updateDate(null, false);\n                        }\n                    });\n                };\n\n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewValue)\n                        updateDate(event.target.value, true);\n                }\n\n                inputElement.bind(\"blur\", onInputElementEvents);\n\n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                });\n\n                // revalidate on constraint change\n                scope.$watch(\"minDate + maxDate\", function() {\n                    ngModel.$validate();\n                });\n            }\n        }\n    };\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(scope, viewValue, scope.format);\n            };\n\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(scope, viewValue, scope.format, scope.minDate);\n            };\n\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(scope, viewValue, scope.format, scope.maxDate);\n            };\n\n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(scope, viewValue, scope.format, scope.dateFilter);\n            };\n\n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n                    minDate: scope.minDate,\n                    maxDate: scope.maxDate,\n                    dateFilter: scope.dateFilter,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    targetEvent: ev\n                }).then(function(time) {\n                    ngModel.$setViewValue(dayjs(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n/* global dayjs, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, ampm, $mdMedia, options) {\n    var self = this;\n\n    var settings = options.settings;\n\n\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = dayjs(time);\n    this.autoSwitch = !!autoSwitch;\n    this.ampm = !!ampm;\n\n    this.hoursFormat = self.ampm ? \"h\" : \"H\";\n    this.minutesFormat = \"mm\";\n\n    this.clockHours = parseInt(this.time.format(this.hoursFormat));\n    this.clockMinutes = parseInt(this.time.format(this.minutesFormat));\n\n    $scope.$mdMedia = $mdMedia;\n\n    this.switchView = function() {\n        self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n    };\n\n    this.setAM = function() {\n        if(self.time.hour() >= 12)\n            self.time = self.time.hour(self.time.hour() - 12);\n    };\n\n    this.setPM = function() {\n        if(self.time.hour() < 12)\n            self.time = self.time.hour(self.time.hour() + 12);\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time);\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var self = this;\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n\n    this.$onInit = function () {\n        self.STEP_DEG = 360 / 12;\n        self.steps = [];\n        this.CLOCK_TYPES = {\n            \"hours\": {\n                range: self.ampm ? 12 : 24,\n            },\n            \"minutes\": {\n                range: 60,\n            }\n        };\n        self.type = self.type || \"hours\";\n\n        switch (self.type) {\n            case TYPE_HOURS:\n                var f = self.ampm ? 1 : 2;\n                var t = self.ampm ? 12 : 23;\n                for(var i = f; i <= t; i+=f)\n                    self.steps.push(i);\n                if (!self.ampm) self.steps.push(0);\n                self.selected = self.time.hour() || 0;\n                if(self.ampm && self.selected > 12) self.selected -= 12;\n\n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minute() || 0;\n\n                break;\n        }\n    };\n\n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return {\n\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n\n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n\n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n\n    this.setTime = function(time, type) {\n        this.selected = time;\n\n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.ampm && self.time.format(\"A\") === \"PM\") time += 12;\n                this.time = this.time.hour(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time = this.time.minute(time);\n                break;\n        }\n\n    };\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?',\n            'ampm': '=?'\n        },\n        replace: true,\n        template: '<md-card class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step || (step == clock.steps[clock.steps.length - 1] && clock.selected == 0), \\'md-raised\\': raised || clock.selected == step  }\" ng-mouseenter=\"raised = true\" ng-mouseleave=\"raised = false\" class=\"md-icon-button mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</md-card>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n\t\t\t\ttimepickerCtrl = scope.$parent.timepicker;\n\t\t\t\t\n            scope.raised = false;\n\n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            };\n\n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n\n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n\n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent);\n\n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        PARENT_GETTER = function() { return undefined };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.setDialogParentGetter = function(fn) {\n        PARENT_GETTER = fn;\n    };\n\n    this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\n        return function (time, options) {\n            var settings = options.settings;\n            if (!dayjs(time).isValid()) {\n                time = dayjs().locale(settings.currentLocale);\n                if (settings.overrideTimezone) {\n                    time = time.tz(settings.timezone, true)\n                } else {\n                    time = time.tz(dayjs.tz.guess(), true)\n                }\n            } else {\n                time = dayjs(time);\n            }\n\n            if (!angular.isObject(options)) options = {};\n\n            var labelOk = options.okLabel || $mdpLocale.time.okLabel || LABEL_OK;\n            var labelCancel = options.cancelLabel || $mdpLocale.time.cancelLabel || LABEL_CANCEL;\n\n            return $mdDialog.show({\n                controller: ['$scope', '$mdDialog', 'time', 'autoSwitch', 'ampm', '$mdMedia', 'options', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                    '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                    '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                    '<div class=\"mdp-timepicker-selected-time\">' +\n                    '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(timepicker.hoursFormat) }}</span>:' +\n\n                    '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(timepicker.minutesFormat) }}</span>' +\n                    '</div>' +\n                    '<div layout=\"column\" ng-show=\"timepicker.ampm\" class=\"mdp-timepicker-selected-ampm\">' +\n\n                    '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hour() < 12 }\">AM</span>' +\n                    '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hour() >= 12 }\">PM</span>' +\n                    '</div>' +\n\n                    '</md-toolbar>' +\n                    '<md-content>' +\n                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n                    '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n                    '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                    '</div>' +\n\n                    '<md-dialog-actions layout=\"row\">' +\n                    '<span flex></span>' +\n                    '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n                    '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n                    '</md-dialog-actions>' +\n                    '</md-content>' +\n                    '</md-dialog-content>' +\n                    '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch,\n                    ampm: angular.isDefined(options.ampm) ? options.ampm : $mdpLocale.time.ampm,\n                    options: options\n                },\n                multiple: true,\n                parent: PARENT_GETTER()\n            });\n        };\n    }];\n});\n\nfunction compareTimeValidator(scope, value, format, otherTime, comparator) {\n    // take only the date part, not the time part\n    if (dayjs(otherTime).isValid()) {\n        otherTime = dayjs(otherTime).format(format);\n    }\n    otherTime = dayjs(otherTime, format, scope.settings.currentLocale, true);\n    var date = dayjs(value).isValid() ? dayjs(value) :  dayjs(value, format, scope.settings.currentLocale, true);\n\n    return !value ||\n            dayjs(value).isValid() ||\n            !otherTime.isValid() ||\n            comparator(date, otherTime);\n}\n\nfunction minTimeValidator(scope, value, format, minTime) {\n    return compareTimeValidator(scope, value, format, minTime, function(t, mt) { return t.isSameOrAfter(mt); });\n}\n\nfunction maxTimeValidator(scope, value, format, maxTime) {\n    return compareTimeValidator(scope, value, format, maxTime, function(t, mt) { return t.isSameOrBefore(mt); });\n}\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", \"$mdpLocale\", function($mdpTimePicker, $timeout, $mdpLocale) {\n    return  {\n        restrict: 'E',\n        require: ['ngModel', \"^^?form\"],\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat) || $mdpLocale.time.noFloat,\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) || $mdpLocale.time.openOnClick;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input size=\"5\" name=\"{{ inputName }}\" ng-required=\"required()\" type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"{{placeholder}}\" placeholder=\"{{placeholder}}\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minTime\": \"=?mdpMinTime\",\n            \"maxTime\": \"=?mdpMaxTime\",\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"ampm\": \"=?mdpAmpm\",\n            \"inputName\": \"@?mdpInputName\",\n            \"clearOnCancel\": \"=?mdpClearOnCancel\",\n            \"mdpSettings\": \"=?mdpSettings\"\n        },\n        link: function(scope, element, attrs, controllers, $transclude) {\n            var ngModel = controllers[0];\n            var form = controllers[1];\n\n            var opts = {\n                get minTime() {\n                    return scope.minTime || $mdpLocale.time.minTime;\n                },\n                get maxTime() {\n                    return scope.maxTime || $mdpLocale.time.maxTime;\n                },\n                get clearOnCancel() {\n                    return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.time.clearOnCancel;\n                },\n                get settings() {\n                    return scope.settings;\n                }\n            };\n\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n            $transclude(function(clone) {\n                inputContainer.append(clone);\n            });\n\n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n            var settings = {};\n\n            scope.type = scope.timeFormat || $mdpLocale.time.timeFormat ? \"text\" : \"time\";\n            scope.timeFormat = scope.timeFormat || $mdpLocale.time.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch === undefined ? $mdpLocale.time.autoSwitch : scope.autoSwitch;\n            scope.model = ngModel;\n            scope.settings = settings;\n\n            setCurrentSettingsToScope(scope);\n\n            scope.isError = function() {\n                return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\n            };\n\n            scope.required = function() {\n                return !!attrs.required;\n            };\n\n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n\n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = null;\n                if (dayjs(value).isValid()) {\n                    var time = dayjs(value);\n                    if (settings.overrideTimezone) {\n                        time = time.tz(settings.timezone, true);\n                    }\n                }\n\n                if(time && time.isValid()) {\n                    var strVal = time.format(scope.timeFormat);\n                    updateInputElement(strVal);\n                    return strVal;\n                } else {\n                    updateInputElement(null);\n                    return null;\n                }\n            });\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || dayjs(viewValue).isValid() || dayjs(viewValue, scope.timeFormat, scope.settings.currentLocale, true).isValid();\n            };\n\n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n            \n            ngModel.$validators.minTime = function(modelValue, viewValue) {\n                return minTimeValidator(scope, viewValue, scope.timeFormat, opts.minTime);\n            };\n\n            ngModel.$validators.maxTime = function(modelValue, viewValue) {\n                return maxTimeValidator(scope, viewValue, scope.timeFormat, opts.maxTime);\n            };\n\n            ngModel.$parsers.unshift(function(value) {\n                var parsed = dayjs(value, scope.timeFormat, scope.settings.currentLocale, true);\n\n                if(parsed.isValid()) {\n                    if(dayjs(ngModel.$modelValue).isValid()) {\n                        var originalModel = dayjs(ngModel.$modelValue);\n                        originalModel = originalModel.minute(parsed.minute());\n                        originalModel = originalModel.hour(parsed.hour());\n                        originalModel = originalModel.second(parsed.second());\n\n\n                        parsed = originalModel;\n                    }\n\n                    // Returns Dayjs object to the model (toDate)\n                    return parsed;\n                } else\n                    return null;\n            });\n\n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n\n            function updateTime(time, fromManualInput) {\n                var value = dayjs().locale(settings.currentLocale);\n\n                if (settings.overrideTimezone) {\n                    value = value.tz(settings.timezone, true);\n                } else {\n                    value = value.tz(dayjs.tz.guess(), true)\n                }\n\n                if (time !== null) {\n\n                    if (dayjs(time).isValid() && !fromManualInput) {\n                        value = dayjs(time);\n                    } else {\n                        // Check if the locale is loaded\n                        if (angular.isDefined(dayjs.Ls[value.locale()])) {\n                            if (dayjs.Ls[value.locale()].formats.LT === \"HH:mm\") {\n                                if (time.length === 4 && time.split(\":\").length === 1) {\n                                    time = time.slice(0, 2) + \":\" + time.slice(2, 4);\n                                }\n                            }\n                        }\n                        value = dayjs(time, scope.timeFormat, scope.settings.currentLocale);\n\n                        if (settings.overrideTimezone) {\n                            value = value.tz(scope.settings.timezone, true).local()\n                            value = value.tz(scope.settings.timezone)\n                        } else {\n                            value = value.tz(dayjs.tz.guess(), true)\n                        }\n                    }\n                }\n\n\n                var strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(value);\n                } else {\n                    updateInputElement(ngModel.$viewValue);\n                }\n\n                if(!ngModel.$pristine &&\n\n                    messages.hasClass(\"md-auto-hide\") &&\n\n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                ngModel.$render();\n            }\n\n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    autoSwitch: scope.autoSwitch,\n                    ampm: scope.ampm,\n                    settings: opts.settings\n                }).then(function(time)\n                {\n                    updateTime(time);\n                }, function (error) {\n                    if (opts.clearOnCancel) {\n                        updateTime(null);\n                    }\n                });\n            };\n\n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewValue)\n                    updateTime(event.target.value, true);\n            }\n\n            inputElement.bind(\"blur\", onInputElementEvents);\n\n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            });\n\n            // revalidate on constraint change\n            scope.$watch(\"minTime + maxTime\", function() {\n                ngModel.$validate();\n            });\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@?mdpOkLabel\",\n            \"cancelLabel\": \"@?mdpCancelLabel\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"ampm\": \"=?mdpAmpm\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    ampm: scope.ampm\n                }).then(function(time) {\n                    ngModel.$setViewValue(dayjs(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n})();"],"names":["module","angular","setCurrentSettingsToScope","scope","settings","isDefined","mdpSettings","locale","currentLocale","timezone","overrideTimezone","dateType","DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","options","self","this","date","dayjs","minDate","isValid","maxDate","displayFormat","dateFilter","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","animating","noop","then","CalendarCtrl","$onInit","daysInMonth","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","$watch","unix","newValue","oldValue","updateDaysInMonth","getDaysInMonth","days","firstDay","day","arr","length","i","value","enabled","isDayEnabled","toDate","push","selectDate","dom","nextMonth","prevMonth","subtract","formatValidator","format","compareDateValidator","otherDate","comparator","minDateValidator","d","md","isSameOrAfter","maxDateValidator","isSameOrBefore","filterValidator","filter","TimePickerCtrl","time","autoSwitch","ampm","VIEW_HOURS","VIEW_MINUTES","currentView","hoursFormat","minutesFormat","clockHours","parseInt","clockMinutes","switchView","setAM","hour","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","hours","range","minutes","type","f","t","selected","minute","getPointerStyle","divider","degrees","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","compareTimeValidator","otherTime","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","factory","minTime","maxTime","okLabel","cancelLabel","timeFormat","noFloat","openOnClick","clearOnCancel","dateFormat","directive","$mdUtil","restrict","priority","compile","element","getClosest","toggleClass","provider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","PARENT_GETTER","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","setDialogParentGetter","fn","$get","$mdpLocale","labelOk","tz","guess","isObject","labelCancel","show","controller","controllerAs","clickOutsideToClose","template","targetEvent","locals","multiple","parent","$animate","bindToController","link","attrs","ctrl","animElements","querySelector","map","a","raised","direction","addClass","removeClass","$mdpDatePicker","require","transclude","mdpNoFloat","mdpOpenOnClick","mdpDisabled","placeholder","disabled","inputName","pre","constollers","$transclude","post","controllers","ngModel","form","opts","inputElement","inputContainer","inputContainerCtrl","messages","clone","append","updateInputElement","setHasValue","$isEmpty","updateDate","fromEvent","strValue","local","$setViewValue","$viewValue","$pristine","hasClass","$render","onInputElementEvents","event","target","model","isError","$invalid","$submitted","required","$formatters","unshift","strVal","$validators","modelValue","viewValue","isUndefined","$parsers","parsed","$modelValue","month","showPicker","ev","error","bind","$on","off","$validate","on","replace","onEvent","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","timepickerCtrl","$parent","timepicker","e","$mdpTimePicker","updateTime","fromManualInput","Ls","formats","LT","split","undefined","$error","setInvalid","Object","keys","mt","second"],"mappings":"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"}